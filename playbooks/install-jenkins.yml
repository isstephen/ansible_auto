---
- hosts: jenkins
  become: yes
  gather_facts: true

  tasks:
    #####################################################################
    # 1. Install Java 17 + Git (runs once)
    #####################################################################
    - name: Install Java 17 and Git
      shell: yum install -y java-17-amazon-corretto git
      args:
        creates: /usr/lib/jvm/java-17-amazon-corretto

    #####################################################################
    # 2. Import Jenkins GPG key
    #####################################################################
    - name: Import Jenkins GPG key
      shell: rpm --import https://pkg.jenkins.io/redhat/jenkins.io-2023.key
      args:
        creates: /etc/pki/rpm-gpg/RPM-GPG-KEY-jenkins

    #####################################################################
    # 3. Add Jenkins repository
    #####################################################################
    - name: Add Jenkins yum repo
      copy:
        dest: /etc/yum.repos.d/jenkins.repo
        mode: '0644'
        content: |
          [jenkins]
          name=Jenkins
          baseurl=https://pkg.jenkins.io/redhat-stable
          gpgcheck=1
          gpgkey=https://pkg.jenkins.io/redhat/jenkins.io-2023.key
      notify: restart jenkins

    #####################################################################
    # 4. Install Jenkins package
    #####################################################################
    - name: Install Jenkins
      shell: yum install -y jenkins
      args:
        creates: /usr/lib/jenkins/jenkins.war
      notify: restart jenkins

    #####################################################################
    # 5. Disable setup‑wizard & create admin user
    #####################################################################
    - name: Disable setup wizard
      lineinfile:
        path: /etc/sysconfig/jenkins
        regexp: '^JENKINS_JAVA_OPTIONS='
        line: 'JENKINS_JAVA_OPTIONS="-Djenkins.install.runSetupWizard=false"'
        create: yes
      notify: restart jenkins
      
    - name: Ensure init.groovy.d directory exists
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'
        
    - name: Drop Groovy init script to create admin user
      copy:
        dest: /var/lib/jenkins/init.groovy.d/01_create_admin.groovy
        owner: jenkins
        group: jenkins
        mode: '0644'
        content: |
          import jenkins.model.*
          import hudson.security.*
          def instance = Jenkins.getInstance()
          def hudsonRealm = new HudsonPrivateSecurityRealm(false)
          hudsonRealm.createAccount("ciadmin", "S3cret!")
          instance.setSecurityRealm(hudsonRealm)
          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          strategy.setAllowAnonymousRead(false)
          instance.setAuthorizationStrategy(strategy)
          instance.save()
      notify: restart jenkins

    #####################################################################
    # 6. Ensure service is enabled & running
    #####################################################################
    - name: Enable Jenkins service
      service:
        name: jenkins
        enabled: yes
        state: started

    ###############################################################################
    # 7.  Install JCasC + Git + Maven plugins via Jenkins API
    ###############################################################################
    - name: Ensure JCasC, Git and Maven plugins are present
      community.general.jenkins_plugin:
        name: "{{ item }}"
        state: present
        url:  "http://{{ inventory_hostname }}:8080"
        url_username: "ciadmin"
        url_password: "S3cret!"
      loop:
        - configuration-as-code
        - git
        - maven-plugin
      notify: restart jenkins          # may require restart first time
    
    ###############################################################################
    # 8.  Copy JCasC YAML bundle
    ###############################################################################
    - name: Ensure casc_configs directory exists
      file:
        path: /var/lib/jenkins/casc_configs
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'
    
    - name: Deploy JCasC plugin list
      copy:
        src: files/casc/plugins.yml
        dest: /var/lib/jenkins/casc_configs/plugins.yml
        owner: jenkins
        group: jenkins
        mode: '0644'
      notify: restart jenkins          # restart if YAML changed
    
    ###############################################################################
    # 9.  Tell Jenkins where the JCasC files live
    ###############################################################################
    - name: Add casc.jenkins.config JVM option
      lineinfile:
        path: /etc/sysconfig/jenkins
        regexp: '^JENKINS_JAVA_OPTIONS='
        line: 'JENKINS_JAVA_OPTIONS="-Djenkins.install.runSetupWizard=false -Dcasc.jenkins.config=/var/lib/jenkins/casc_configs"'
        create: yes
      notify: restart jenkins
    # ← blank line above closes the tasks list
    
  #####################################################################
  # Handlers
  #####################################################################
  handlers:
    - name: restart jenkins
      service:
        name: jenkins
        state: restarted
